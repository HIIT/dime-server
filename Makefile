GRADLE   = ./gradlew -q
TARGET   = build/libs/dime-server-0.1.0.jar
JAVADOC_DIR = build/docs/javadoc/
JAVADOC_WEB = shell.hiit.fi:/group/reknow/public_html/javadoc/dime-server/
SOURCES := $(shell find src/ -name '[A-Z]*.java' -or -name '*.html')

DOCKER_DB_DIR = ~/dime-db

LOCAL_PROPERTIES = config/application-local.properties
CLEAN_TMP_DIR = ~/.dime/tmp/cleandb
AUTOGEN_TMP_DIR = ~/.dime/tmp/autogen
LOG_HEAD = "[MAKE]"

all:	assemble

assemble:  $(TARGET)

$(TARGET): $(SOURCES)
	$(GRADLE) assemble

run:    $(TARGET)
	$(GRADLE) run

test:
	rm -rf ./build/reports/tests/
	$(GRADLE) test
	@echo $(LOG_HEAD) Now open ./build/reports/tests/index.html

clean:
	$(GRADLE) clean

doc: $(SOURCES)
	$(GRADLE) javadoc
	chmod -R a+r $(JAVADOC_DIR)
	rsync -var $(JAVADOC_DIR) $(JAVADOC_WEB)
	@echo
	@echo $(LOG_HEAD) Now open ./build/docs/javadoc/index.html

docker: $(TARGET)
	docker build -t dime-server .

docker_db_dir:
	@echo $(LOG_HEAD) Creating directory for mongodb ...
	mkdir $(DOCKER_DB_DIR)
	chmod 777 $(DOCKER_DB_DIR)

runDocker: docker docker_db_dir
	docker run -it -p 8080:8080 -v $(DOCKER_DB_DIR):/var/lib/mongodb dime-server

cleanDb:
	@echo $(LOG_HEAD) Creating temporary clean database generated from liquibase schema
	rm -rf $(CLEAN_TMP_DIR)
	@echo $(LOG_HEAD) Running tests to auto-generate database
	SPRING_PROFILES_ACTIVE=cleandb $(MAKE) test

autogenDb:
	@echo $(LOG_HEAD) Creating temporary database auto-generated by hibernate
	rm -rf $(AUTOGEN_TMP_DIR)
	@echo $(LOG_HEAD) Running tests to auto-generate database
	SPRING_PROFILES_ACTIVE=autogen $(MAKE) test

initSchema: autogenDb
	rm -f src/main/resources/db/changelog/db.changelog-master.xml
	$(GRADLE) generateChangelog

updateSchema: autogenDb
	$(GRADLE) diffChangeLog
