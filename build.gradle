buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE'
        classpath 'org.liquibase:liquibase-gradle-plugin:1.1.1'
	classpath 'com.h2database:h2:1.4.190'
    }	
}

apply plugin: 'org.liquibase.gradle'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

// sourceCompatibility = '1.7'
// targetCompatibility = '1.7'

/*
 * Gets the version name from the latest Git tag        
 * From: http://www.ryanharter.com/blog/2013/07/30/automatic-versioning-with-git-and-gradle/
 */
def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--dirty=-modified'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

version = getVersionName()

processResources {
    outputs.upToDateWhen{false}
    filesMatching('**/*.properties') { expand(project.properties) }
}

jar {
    baseName = 'dime-server'
    version = ''
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    
    compile 'org.liquibase:liquibase-core'
    runtime 'com.h2database:h2'
    runtime 'mysql:mysql-connector-java'

    compile 'com.fasterxml.jackson.core:jackson-annotations'

    compile 'org.apache.lucene:lucene-core:5.3.0'
    compile 'org.apache.lucene:lucene-analyzers-common:5.3.0'
    compile 'org.apache.lucene:lucene-queryparser:5.3.0'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

task buildDocker(dependsOn: jar, type: Exec) {
    commandLine 'docker', 'build', '-t', 'dime-server', '.'
}

javadoc {
        options.tags = [ 
        "api:X", 
        "apiDefine:X",
        "apiDescription:X",
        "apiError:X",
        "apiErrorExample:X",
        "apiExample:X",
        "apiGroup:X",
        "apiHeader:X",
        "apiHeaderExample:X",
        "apiIgnore:X",
        "apiName:X",
        "apiParam:X",
        "apiParamExample:X",
        "apiPermission:X",
        "apiSampleRequest:X",
        "apiSuccess:X",
        "apiSuccessExample:X",
        "apiUse:X",
        "apiVersion:X",
        ]
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

liquibase {
  activities {
    main {
      changeLogFile 'src/main/resources/db/changelog/db.changelog-master.xml'

      url 'jdbc:h2:file:~/.dime/database/h2'
      username 'sa'
      password 'sa'

      referenceUrl 'jdbc:h2:file:~/.dime/tmp/autogen/h2'
      referenceUsername 'sa'
      referencePassword 'sa'
    }
  }
  runList = 'main'
}
